<?xml version="1.0" encoding="utf-8"?><ManagementPack ContentReadable="true" SchemaVersion="2.0" OriginalSchemaVersion="1.1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <Manifest>
    <Identity>
      <ID>Microsoft.Windows.Server.DHCP.2016.Addendum</ID>
      <Version>1.0.0.5</Version>
    </Identity>
    <Name>Microsoft Windows Server DHCP 2016 Addendum</Name>
    <References>
      <Reference Alias="SCCUC">
        <ID>SystemCenterCentral.Utilities.Certificates</ID>
        <Version>1.4.3.0</Version>
        <PublicKeyToken>e5c80663d573f08c</PublicKeyToken>
      </Reference>
      <Reference Alias="MWD6">
        <ID>Microsoft.Windows.DHCPServer.2016</ID>
        <Version>10.0.0.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="Windows">
        <ID>Microsoft.Windows.Library</ID>
        <Version>7.5.8501.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="MSIGL">
        <ID>Microsoft.SystemCenter.InstanceGroup.Library</ID>
        <Version>7.5.8501.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="System">
        <ID>System.Library</ID>
        <Version>7.5.8501.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="MWS6D">
        <ID>Microsoft.Windows.Server.2016.Discovery</ID>
        <Version>10.0.0.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="SC">
        <ID>Microsoft.SystemCenter.Library</ID>
        <Version>7.0.8433.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="MWDL">
        <ID>Microsoft.Windows.DHCPServer.Library</ID>
        <Version>10.1.0.1</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="Health">
        <ID>System.Health.Library</ID>
        <Version>7.0.8433.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
    </References>
  </Manifest>
  <TypeDefinitions>
    <EntityTypes>
      <ClassTypes>
        <ClassType ID="Microsoft.Windows.DHCP.2016.Servers.Group" Accessibility="Public" Abstract="false" Base="MSIGL!Microsoft.SystemCenter.InstanceGroup" Hosted="false" Singleton="true" Extension="false" />
        <ClassType ID="Microsoft.Windows.DHCP.2016.Subscription.Group" Accessibility="Public" Abstract="false" Base="MSIGL!Microsoft.SystemCenter.InstanceGroup" Hosted="false" Singleton="true" Extension="false" />
      </ClassTypes>
    </EntityTypes>
    <MonitorTypes>
      <UnitMonitorType ID="Microsoft.Windows.DHCP.2016.Service.Monitor.MonitorType" Accessibility="Public">
        <MonitorTypeStates>
          <MonitorTypeState ID="Running" NoDetection="false" />
          <MonitorTypeState ID="NotRunning" NoDetection="false" />
        </MonitorTypeStates>
        <Configuration>
          <xsd:element name="ComputerName" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="ServiceName" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="IntervalSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="CheckStartupType" minOccurs="0" maxOccurs="1" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="Samples" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int" />
          <OverrideableParameter ID="CheckStartupType" Selector="$Config/CheckStartupType$" ParameterType="string" />
          <OverrideableParameter ID="Samples" Selector="$Config/Samples$" ParameterType="int" />
        </OverrideableParameters>
        <MonitorImplementation>
          <MemberModules>
            <DataSource ID="DS" TypeID="Windows!Microsoft.Windows.Win32ServiceInformationProvider">
              <ComputerName>$Config/ComputerName$</ComputerName>
              <ServiceName>$Config/ServiceName$</ServiceName>
              <Frequency>$Config/IntervalSeconds$</Frequency>
              <DisableCaching>true</DisableCaching>
              <CheckStartupType>$Config/CheckStartupType$</CheckStartupType>
            </DataSource>
            <ProbeAction ID="Probe" TypeID="Windows!Microsoft.Windows.Win32ServiceInformationProbe">
              <ComputerName>$Config/ComputerName$</ComputerName>
              <ServiceName>$Config/ServiceName$</ServiceName>
            </ProbeAction>
            <ConditionDetection ID="ServiceRunning" TypeID="System!System.ExpressionFilter">
              <Expression>
                <Or>
                  <Expression>
                    <SimpleExpression>
                      <ValueExpression>
                        <XPathQuery Type="Integer">Property[@Name='StartMode']</XPathQuery>
                      </ValueExpression>
                      <Operator>Equal</Operator>
                      <ValueExpression>
                        <Value Type="Integer">4</Value>
                        <!-- 0=BootStart 1=SystemStart 2=Automatic 3=Manual 4=Disabled -->
                      </ValueExpression>
                    </SimpleExpression>
                  </Expression>
                  <Expression>
                    <SimpleExpression>
                      <ValueExpression>
                        <XPathQuery Type="Integer">Property[@Name='State']</XPathQuery>
                      </ValueExpression>
                      <Operator>Equal</Operator>
                      <ValueExpression>
                        <Value Type="Integer">4</Value>
                        <!-- 0=Unknown 1=Stopped 2=StartPending 3=StopPending 4=Running 5=ContinuePending 6=PausePending 7=Paused 8=ServiceNotFound 9=ServerNotFound -->
                      </ValueExpression>
                    </SimpleExpression>
                  </Expression>
                </Or>
              </Expression>
            </ConditionDetection>
            <ConditionDetection ID="ServiceNotRunning" TypeID="System!System.ExpressionFilter">
              <Expression>
                <And>
                  <Expression>
                    <SimpleExpression>
                      <ValueExpression>
                        <XPathQuery Type="Integer">Property[@Name='StartMode']</XPathQuery>
                      </ValueExpression>
                      <Operator>NotEqual</Operator>
                      <ValueExpression>
                        <Value Type="Integer">4</Value>
                        <!-- 0=BootStart 1=SystemStart 2=Automatic 3=Manual 4=Disabled -->
                      </ValueExpression>
                    </SimpleExpression>
                  </Expression>
                  <Expression>
                    <SimpleExpression>
                      <ValueExpression>
                        <XPathQuery Type="Integer">Property[@Name='State']</XPathQuery>
                      </ValueExpression>
                      <Operator>NotEqual</Operator>
                      <ValueExpression>
                        <Value Type="Integer">4</Value>
                        <!-- 0=Unknown 1=Stopped 2=StartPending 3=StopPending 4=Running 5=ContinuePending 6=PausePending 7=Paused 8=ServiceNotFound 9=ServerNotFound -->
                      </ValueExpression>
                    </SimpleExpression>
                  </Expression>
                </And>
              </Expression>
              <SuppressionSettings>
                <MatchCount>$Config/Samples$</MatchCount>
              </SuppressionSettings>
            </ConditionDetection>
          </MemberModules>
          <RegularDetections>
            <RegularDetection MonitorTypeStateID="Running">
              <Node ID="ServiceRunning">
                <Node ID="DS" />
              </Node>
            </RegularDetection>
            <RegularDetection MonitorTypeStateID="NotRunning">
              <Node ID="ServiceNotRunning">
                <Node ID="DS" />
              </Node>
            </RegularDetection>
          </RegularDetections>
          <OnDemandDetections>
            <OnDemandDetection MonitorTypeStateID="Running">
              <Node ID="ServiceRunning">
                <Node ID="Probe" />
              </Node>
            </OnDemandDetection>
            <OnDemandDetection MonitorTypeStateID="NotRunning">
              <Node ID="ServiceNotRunning">
                <Node ID="Probe" />
              </Node>
            </OnDemandDetection>
          </OnDemandDetections>
        </MonitorImplementation>
      </UnitMonitorType>
    </MonitorTypes>
  </TypeDefinitions>
  <Monitoring>
    <Discoveries>
      <Discovery ID="Microsoft.Windows.DHCP.2016.Servers.Group.DiscoveryRule" Enabled="true" Target="Microsoft.Windows.DHCP.2016.Servers.Group" ConfirmDelivery="false" Remotable="true" Priority="Normal">
        <Category>Discovery</Category>
        <DiscoveryTypes>
          <DiscoveryRelationship TypeID="MSIGL!Microsoft.SystemCenter.InstanceGroupContainsEntities" />
        </DiscoveryTypes>
        <DataSource ID="GroupPopulationDataSource" TypeID="SC!Microsoft.SystemCenter.GroupPopulator">
          <RuleId>$MPElement$</RuleId>
          <GroupInstanceId>$MPElement[Name="Microsoft.Windows.DHCP.2016.Servers.Group"]$</GroupInstanceId>
          <MembershipRules>
            <MembershipRule>
              <MonitoringClass>$MPElement[Name="MWS6D!Microsoft.Windows.Server.10.0.Computer"]$</MonitoringClass>
              <RelationshipClass>$MPElement[Name="MSIGL!Microsoft.SystemCenter.InstanceGroupContainsEntities"]$</RelationshipClass>
              <Expression>
                <RegExExpression>
                  <ValueExpression>
                    <Property>$MPElement[Name="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Property>
                  </ValueExpression>
                  <Operator>MatchesRegularExpression</Operator>
                  <Pattern>(?i)##DHCPServersRegEx##</Pattern>
                </RegExExpression>
              </Expression>
            </MembershipRule>
          </MembershipRules>
        </DataSource>
      </Discovery>
      <Discovery ID="Microsoft.Windows.DHCP.2016.Subscription.Group.DiscoveryRule" Enabled="true" Target="Microsoft.Windows.DHCP.2016.Subscription.Group" ConfirmDelivery="false" Remotable="true" Priority="Normal">
        <Category>Discovery</Category>
        <DiscoveryTypes>
          <DiscoveryRelationship TypeID="MSIGL!Microsoft.SystemCenter.InstanceGroupContainsEntities" />
        </DiscoveryTypes>
        <DataSource ID="GroupPopulationDataSource" TypeID="SC!Microsoft.SystemCenter.GroupPopulator">
          <RuleId>$MPElement$</RuleId>
          <GroupInstanceId>$MPElement[Name="Microsoft.Windows.DHCP.2016.Subscription.Group"]$</GroupInstanceId>
          <MembershipRules>
            <MembershipRule>
              <MonitoringClass>$MPElement[Name="Windows!Microsoft.Windows.Computer"]$</MonitoringClass>
              <RelationshipClass>$MPElement[Name="MSIGL!Microsoft.SystemCenter.InstanceGroupContainsEntities"]$</RelationshipClass>
              <Expression>
                <RegExExpression>
                  <ValueExpression>
                    <Property>$MPElement[Name="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Property>
                  </ValueExpression>
                  <Operator>MatchesRegularExpression</Operator>
                  <Pattern>(?i)##DHCPServersRegEx##</Pattern>
                </RegExExpression>
              </Expression>
            </MembershipRule>
            <MembershipRule>
              <MonitoringClass>$MPElement[Name="SCCUC!SystemCenterCentral.Utilities.Certificates.Certificate"]$</MonitoringClass>
              <RelationshipClass>$MPElement[Name="MSIGL!Microsoft.SystemCenter.InstanceGroupContainsEntities"]$</RelationshipClass>
              <Expression>
                <RegExExpression>
                  <ValueExpression>
                    <HostProperty>
                      <MonitoringClass>$MPElement[Name="Windows!Microsoft.Windows.Computer"]$</MonitoringClass>
                      <Property>$MPElement[Name="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Property>
                    </HostProperty>
                  </ValueExpression>
                  <Operator>MatchesRegularExpression</Operator>
                  <Pattern>(?i)##DHCPServersRegEx##</Pattern>
                </RegExExpression>
              </Expression>
            </MembershipRule>
            <MembershipRule>
              <MonitoringClass>$MPElement[Name="MWS6D!Microsoft.Windows.Server.10.0.Core.OperatingSystem"]$</MonitoringClass>
              <RelationshipClass>$MPElement[Name="MSIGL!Microsoft.SystemCenter.InstanceGroupContainsEntities"]$</RelationshipClass>
              <Expression>
                <RegExExpression>
                  <ValueExpression>
                    <HostProperty>
                      <MonitoringClass>$MPElement[Name="Windows!Microsoft.Windows.Computer"]$</MonitoringClass>
                      <Property>$MPElement[Name="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Property>
                    </HostProperty>
                  </ValueExpression>
                  <Operator>MatchesRegularExpression</Operator>
                  <Pattern>(?i)##DHCPServersRegEx##</Pattern>
                </RegExExpression>
              </Expression>
            </MembershipRule>
            <MembershipRule>
              <MonitoringClass>$MPElement[Name="MWS6D!Microsoft.Windows.Server.10.0.Processor"]$</MonitoringClass>
              <RelationshipClass>$MPElement[Name="MSIGL!Microsoft.SystemCenter.InstanceGroupContainsEntities"]$</RelationshipClass>
              <Expression>
                <RegExExpression>
                  <ValueExpression>
                    <HostProperty>
                      <MonitoringClass>$MPElement[Name="Windows!Microsoft.Windows.Computer"]$</MonitoringClass>
                      <Property>$MPElement[Name="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Property>
                    </HostProperty>
                  </ValueExpression>
                  <Operator>MatchesRegularExpression</Operator>
                  <Pattern>(?i)##DHCPServersRegEx##</Pattern>
                </RegExExpression>
              </Expression>
            </MembershipRule>
            <MembershipRule>
              <MonitoringClass>$MPElement[Name="MWS6D!Microsoft.Windows.Server.10.0.LogicalDisk"]$</MonitoringClass>
              <RelationshipClass>$MPElement[Name="MSIGL!Microsoft.SystemCenter.InstanceGroupContainsEntities"]$</RelationshipClass>
              <Expression>
                <RegExExpression>
                  <ValueExpression>
                    <HostProperty>
                      <MonitoringClass>$MPElement[Name="Windows!Microsoft.Windows.Computer"]$</MonitoringClass>
                      <Property>$MPElement[Name="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Property>
                    </HostProperty>
                  </ValueExpression>
                  <Operator>MatchesRegularExpression</Operator>
                  <Pattern>(?i)##DHCPServersRegEx##</Pattern>
                </RegExExpression>
              </Expression>
            </MembershipRule>
          </MembershipRules>
        </DataSource>
      </Discovery>
    </Discoveries>
    <Rules>
      <Rule ID="Microsoft.Windows.DHCP.2016.Client.Service.NotFound.Recovery.Rule" Enabled="true" Target="MWD6!Microsoft.Windows.DHCPServer.10.0.Server" ConfirmDelivery="true" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>Alert</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="Windows!Microsoft.Windows.EventProvider">
            <ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName>
            <LogName>Operations Manager</LogName>
            <Expression>
              <And>
                <Expression>
                  <SimpleExpression>
                    <ValueExpression>
                      <XPathQuery Type="UnsignedInteger">EventDisplayNumber</XPathQuery>
                    </ValueExpression>
                    <Operator>Equal</Operator>
                    <ValueExpression>
                      <Value Type="UnsignedInteger">3751</Value>
                    </ValueExpression>
                  </SimpleExpression>
                </Expression>
                <Expression>
                  <SimpleExpression>
                    <ValueExpression>
                      <XPathQuery Type="String">PublisherName</XPathQuery>
                    </ValueExpression>
                    <Operator>Equal</Operator>
                    <ValueExpression>
                      <Value Type="String">Health Service Script</Value>
                    </ValueExpression>
                  </SimpleExpression>
                </Expression>
                <Expression>
                  <RegExExpression>
                    <ValueExpression>
                      <XPathQuery Type="String">Params/Param[2]</XPathQuery>
                    </ValueExpression>
                    <Operator>ContainsSubstring</Operator>
                    <Pattern>dhcp </Pattern>
                  </RegExExpression>
                </Expression>
              </And>
            </Expression>
          </DataSource>
        </DataSources>
        <WriteActions>
          <WriteAction ID="Alert" TypeID="Health!System.Health.GenerateAlert">
            <Priority>1</Priority>
            <Severity>0</Severity>
            <AlertName />
            <AlertDescription />
            <AlertOwner />
            <AlertMessageId>$MPElement[Name="Microsoft.Windows.DHCP.2016.Client.Service.NotFound.Recovery.Rule.AlertMessage"]$</AlertMessageId>
            <AlertParameters>
              <AlertParameter1>$Data/EventDescription$</AlertParameter1>
            </AlertParameters>
            <Suppression>
              <SuppressionValue>$Data[Default='']/EventDisplayNumber$</SuppressionValue>
              <SuppressionValue>$Data[Default='']/PublisherName$</SuppressionValue>
              <SuppressionValue>$Data[Default='']/LoggingComputer$</SuppressionValue>
            </Suppression>
            <Custom1 />
            <Custom2 />
            <Custom3 />
            <Custom4 />
            <Custom5 />
            <Custom6 />
            <Custom7 />
            <Custom8 />
            <Custom9 />
            <Custom10 />
          </WriteAction>
        </WriteActions>
      </Rule>
      <Rule ID="Microsoft.Windows.DHCP.2016.Client.Service.FoundRunning.Recovery.Rule" Enabled="true" Target="MWD6!Microsoft.Windows.DHCPServer.10.0.Server" ConfirmDelivery="true" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>Alert</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="Windows!Microsoft.Windows.EventProvider">
            <ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName>
            <LogName>Operations Manager</LogName>
            <Expression>
              <And>
                <Expression>
                  <SimpleExpression>
                    <ValueExpression>
                      <XPathQuery Type="UnsignedInteger">EventDisplayNumber</XPathQuery>
                    </ValueExpression>
                    <Operator>Equal</Operator>
                    <ValueExpression>
                      <Value Type="UnsignedInteger">3752</Value>
                    </ValueExpression>
                  </SimpleExpression>
                </Expression>
                <Expression>
                  <SimpleExpression>
                    <ValueExpression>
                      <XPathQuery Type="String">PublisherName</XPathQuery>
                    </ValueExpression>
                    <Operator>Equal</Operator>
                    <ValueExpression>
                      <Value Type="String">Health Service Script</Value>
                    </ValueExpression>
                  </SimpleExpression>
                </Expression>
                <Expression>
                  <RegExExpression>
                    <ValueExpression>
                      <XPathQuery Type="String">Params/Param[2]</XPathQuery>
                    </ValueExpression>
                    <Operator>ContainsSubstring</Operator>
                    <Pattern>dhcp </Pattern>
                  </RegExExpression>
                </Expression>
              </And>
            </Expression>
          </DataSource>
        </DataSources>
        <WriteActions>
          <WriteAction ID="Alert" TypeID="Health!System.Health.GenerateAlert">
            <Priority>1</Priority>
            <Severity>0</Severity>
            <AlertName />
            <AlertDescription />
            <AlertOwner />
            <AlertMessageId>$MPElement[Name="Microsoft.Windows.DHCP.2016.Client.Service.FoundRunning.Recovery.Rule.AlertMessage"]$</AlertMessageId>
            <AlertParameters>
              <AlertParameter1>$Data/EventDescription$</AlertParameter1>
            </AlertParameters>
            <Suppression>
              <SuppressionValue>$Data[Default='']/EventDisplayNumber$</SuppressionValue>
              <SuppressionValue>$Data[Default='']/PublisherName$</SuppressionValue>
              <SuppressionValue>$Data[Default='']/LoggingComputer$</SuppressionValue>
            </Suppression>
            <Custom1 />
            <Custom2 />
            <Custom3 />
            <Custom4 />
            <Custom5 />
            <Custom6 />
            <Custom7 />
            <Custom8 />
            <Custom9 />
            <Custom10 />
          </WriteAction>
        </WriteActions>
      </Rule>
      <Rule ID="Microsoft.Windows.DHCP.2016.Client.Service.RecoveryFailed.Recovery.Rule" Enabled="true" Target="MWD6!Microsoft.Windows.DHCPServer.10.0.Server" ConfirmDelivery="true" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>Alert</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="Windows!Microsoft.Windows.EventProvider">
            <ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName>
            <LogName>Operations Manager</LogName>
            <Expression>
              <And>
                <Expression>
                  <SimpleExpression>
                    <ValueExpression>
                      <XPathQuery Type="UnsignedInteger">EventDisplayNumber</XPathQuery>
                    </ValueExpression>
                    <Operator>Equal</Operator>
                    <ValueExpression>
                      <Value Type="UnsignedInteger">3753</Value>
                    </ValueExpression>
                  </SimpleExpression>
                </Expression>
                <Expression>
                  <SimpleExpression>
                    <ValueExpression>
                      <XPathQuery Type="String">PublisherName</XPathQuery>
                    </ValueExpression>
                    <Operator>Equal</Operator>
                    <ValueExpression>
                      <Value Type="String">Health Service Script</Value>
                    </ValueExpression>
                  </SimpleExpression>
                </Expression>
                <Expression>
                  <RegExExpression>
                    <ValueExpression>
                      <XPathQuery Type="String">Params/Param[2]</XPathQuery>
                    </ValueExpression>
                    <Operator>ContainsSubstring</Operator>
                    <Pattern> dhcp </Pattern>
                  </RegExExpression>
                </Expression>
              </And>
            </Expression>
          </DataSource>
        </DataSources>
        <WriteActions>
          <WriteAction ID="Alert" TypeID="Health!System.Health.GenerateAlert">
            <Priority>1</Priority>
            <Severity>1</Severity>
            <AlertName />
            <AlertDescription />
            <AlertOwner />
            <AlertMessageId>$MPElement[Name="Microsoft.Windows.DHCP.2016.Client.Service.RecoveryFailed.Recovery.Rule.AlertMessage"]$</AlertMessageId>
            <AlertParameters>
              <AlertParameter1>$Data/EventDescription$</AlertParameter1>
            </AlertParameters>
            <Suppression>
              <SuppressionValue>$Data[Default='']/EventDisplayNumber$</SuppressionValue>
              <SuppressionValue>$Data[Default='']/PublisherName$</SuppressionValue>
              <SuppressionValue>$Data[Default='']/LoggingComputer$</SuppressionValue>
            </Suppression>
            <Custom1 />
            <Custom2 />
            <Custom3 />
            <Custom4 />
            <Custom5 />
            <Custom6 />
            <Custom7 />
            <Custom8 />
            <Custom9 />
            <Custom10 />
          </WriteAction>
        </WriteActions>
      </Rule>
      <Rule ID="Microsoft.Windows.DHCP.2016.Client.Service.TooManyRecoveryAttempts.Recovery.Rule" Enabled="true" Target="MWD6!Microsoft.Windows.DHCPServer.10.0.Server" ConfirmDelivery="true" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>Alert</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="Windows!Microsoft.Windows.EventProvider">
            <ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName>
            <LogName>Operations Manager</LogName>
            <Expression>
              <And>
                <Expression>
                  <SimpleExpression>
                    <ValueExpression>
                      <XPathQuery Type="UnsignedInteger">EventDisplayNumber</XPathQuery>
                    </ValueExpression>
                    <Operator>Equal</Operator>
                    <ValueExpression>
                      <Value Type="UnsignedInteger">3754</Value>
                    </ValueExpression>
                  </SimpleExpression>
                </Expression>
                <Expression>
                  <SimpleExpression>
                    <ValueExpression>
                      <XPathQuery Type="String">PublisherName</XPathQuery>
                    </ValueExpression>
                    <Operator>Equal</Operator>
                    <ValueExpression>
                      <Value Type="String">Health Service Script</Value>
                    </ValueExpression>
                  </SimpleExpression>
                </Expression>
                <Expression>
                  <RegExExpression>
                    <ValueExpression>
                      <XPathQuery Type="String">Params/Param[2]</XPathQuery>
                    </ValueExpression>
                    <Operator>ContainsSubstring</Operator>
                    <Pattern>dhcp </Pattern>
                  </RegExExpression>
                </Expression>
              </And>
            </Expression>
          </DataSource>
        </DataSources>
        <WriteActions>
          <WriteAction ID="Alert" TypeID="Health!System.Health.GenerateAlert">
            <Priority>1</Priority>
            <Severity>1</Severity>
            <AlertName />
            <AlertDescription />
            <AlertOwner />
            <AlertMessageId>$MPElement[Name="Microsoft.Windows.DHCP.2016.Client.Service.TooManyRecoveryAttempts.Recovery.Rule.AlertMessage"]$</AlertMessageId>
            <AlertParameters>
              <AlertParameter1>$Data/EventDescription$</AlertParameter1>
            </AlertParameters>
            <Suppression>
              <SuppressionValue>$Data[Default='']/EventDisplayNumber$</SuppressionValue>
              <SuppressionValue>$Data[Default='']/PublisherName$</SuppressionValue>
              <SuppressionValue>$Data[Default='']/LoggingComputer$</SuppressionValue>
            </Suppression>
            <Custom1 />
            <Custom2 />
            <Custom3 />
            <Custom4 />
            <Custom5 />
            <Custom6 />
            <Custom7 />
            <Custom8 />
            <Custom9 />
            <Custom10 />
          </WriteAction>
        </WriteActions>
      </Rule>
      <Rule ID="Microsoft.Windows.DHCP.2016.Server.Service.NotFound.Recovery.Rule" Enabled="true" Target="MWD6!Microsoft.Windows.DHCPServer.10.0.Server" ConfirmDelivery="true" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>Alert</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="Windows!Microsoft.Windows.EventProvider">
            <ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName>
            <LogName>Operations Manager</LogName>
            <Expression>
              <And>
                <Expression>
                  <SimpleExpression>
                    <ValueExpression>
                      <XPathQuery Type="UnsignedInteger">EventDisplayNumber</XPathQuery>
                    </ValueExpression>
                    <Operator>Equal</Operator>
                    <ValueExpression>
                      <Value Type="UnsignedInteger">3751</Value>
                    </ValueExpression>
                  </SimpleExpression>
                </Expression>
                <Expression>
                  <SimpleExpression>
                    <ValueExpression>
                      <XPathQuery Type="String">PublisherName</XPathQuery>
                    </ValueExpression>
                    <Operator>Equal</Operator>
                    <ValueExpression>
                      <Value Type="String">Health Service Script</Value>
                    </ValueExpression>
                  </SimpleExpression>
                </Expression>
                <Expression>
                  <RegExExpression>
                    <ValueExpression>
                      <XPathQuery Type="String">Params/Param[2]</XPathQuery>
                    </ValueExpression>
                    <Operator>ContainsSubstring</Operator>
                    <Pattern>DHCPServer</Pattern>
                  </RegExExpression>
                </Expression>
              </And>
            </Expression>
          </DataSource>
        </DataSources>
        <WriteActions>
          <WriteAction ID="Alert" TypeID="Health!System.Health.GenerateAlert">
            <Priority>1</Priority>
            <Severity>0</Severity>
            <AlertName />
            <AlertDescription />
            <AlertOwner />
            <AlertMessageId>$MPElement[Name="Microsoft.Windows.DHCP.2016.Server.Service.NotFound.Recovery.Rule.AlertMessage"]$</AlertMessageId>
            <AlertParameters>
              <AlertParameter1>$Data/EventDescription$</AlertParameter1>
            </AlertParameters>
            <Suppression>
              <SuppressionValue>$Data[Default='']/EventDisplayNumber$</SuppressionValue>
              <SuppressionValue>$Data[Default='']/PublisherName$</SuppressionValue>
              <SuppressionValue>$Data[Default='']/LoggingComputer$</SuppressionValue>
            </Suppression>
            <Custom1 />
            <Custom2 />
            <Custom3 />
            <Custom4 />
            <Custom5 />
            <Custom6 />
            <Custom7 />
            <Custom8 />
            <Custom9 />
            <Custom10 />
          </WriteAction>
        </WriteActions>
      </Rule>
      <Rule ID="Microsoft.Windows.DHCP.2016.Server.Service.FoundRunning.Recovery.Rule" Enabled="true" Target="MWD6!Microsoft.Windows.DHCPServer.10.0.Server" ConfirmDelivery="true" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>Alert</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="Windows!Microsoft.Windows.EventProvider">
            <ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName>
            <LogName>Operations Manager</LogName>
            <Expression>
              <And>
                <Expression>
                  <SimpleExpression>
                    <ValueExpression>
                      <XPathQuery Type="UnsignedInteger">EventDisplayNumber</XPathQuery>
                    </ValueExpression>
                    <Operator>Equal</Operator>
                    <ValueExpression>
                      <Value Type="UnsignedInteger">3752</Value>
                    </ValueExpression>
                  </SimpleExpression>
                </Expression>
                <Expression>
                  <SimpleExpression>
                    <ValueExpression>
                      <XPathQuery Type="String">PublisherName</XPathQuery>
                    </ValueExpression>
                    <Operator>Equal</Operator>
                    <ValueExpression>
                      <Value Type="String">Health Service Script</Value>
                    </ValueExpression>
                  </SimpleExpression>
                </Expression>
                <Expression>
                  <RegExExpression>
                    <ValueExpression>
                      <XPathQuery Type="String">Params/Param[2]</XPathQuery>
                    </ValueExpression>
                    <Operator>ContainsSubstring</Operator>
                    <Pattern>DHCPServer</Pattern>
                  </RegExExpression>
                </Expression>
              </And>
            </Expression>
          </DataSource>
        </DataSources>
        <WriteActions>
          <WriteAction ID="Alert" TypeID="Health!System.Health.GenerateAlert">
            <Priority>1</Priority>
            <Severity>0</Severity>
            <AlertName />
            <AlertDescription />
            <AlertOwner />
            <AlertMessageId>$MPElement[Name="Microsoft.Windows.DHCP.2016.Server.Service.FoundRunning.Recovery.Rule.AlertMessage"]$</AlertMessageId>
            <AlertParameters>
              <AlertParameter1>$Data/EventDescription$</AlertParameter1>
            </AlertParameters>
            <Suppression>
              <SuppressionValue>$Data[Default='']/EventDisplayNumber$</SuppressionValue>
              <SuppressionValue>$Data[Default='']/PublisherName$</SuppressionValue>
              <SuppressionValue>$Data[Default='']/LoggingComputer$</SuppressionValue>
            </Suppression>
            <Custom1 />
            <Custom2 />
            <Custom3 />
            <Custom4 />
            <Custom5 />
            <Custom6 />
            <Custom7 />
            <Custom8 />
            <Custom9 />
            <Custom10 />
          </WriteAction>
        </WriteActions>
      </Rule>
      <Rule ID="Microsoft.Windows.DHCP.2016.Server.Service.RecoveryFailed.Recovery.Rule" Enabled="true" Target="MWD6!Microsoft.Windows.DHCPServer.10.0.Server" ConfirmDelivery="true" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>Alert</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="Windows!Microsoft.Windows.EventProvider">
            <ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName>
            <LogName>Operations Manager</LogName>
            <Expression>
              <And>
                <Expression>
                  <SimpleExpression>
                    <ValueExpression>
                      <XPathQuery Type="UnsignedInteger">EventDisplayNumber</XPathQuery>
                    </ValueExpression>
                    <Operator>Equal</Operator>
                    <ValueExpression>
                      <Value Type="UnsignedInteger">3753</Value>
                    </ValueExpression>
                  </SimpleExpression>
                </Expression>
                <Expression>
                  <SimpleExpression>
                    <ValueExpression>
                      <XPathQuery Type="String">PublisherName</XPathQuery>
                    </ValueExpression>
                    <Operator>Equal</Operator>
                    <ValueExpression>
                      <Value Type="String">Health Service Script</Value>
                    </ValueExpression>
                  </SimpleExpression>
                </Expression>
                <Expression>
                  <RegExExpression>
                    <ValueExpression>
                      <XPathQuery Type="String">Params/Param[2]</XPathQuery>
                    </ValueExpression>
                    <Operator>ContainsSubstring</Operator>
                    <Pattern>DHCPServer</Pattern>
                  </RegExExpression>
                </Expression>
              </And>
            </Expression>
          </DataSource>
        </DataSources>
        <WriteActions>
          <WriteAction ID="Alert" TypeID="Health!System.Health.GenerateAlert">
            <Priority>1</Priority>
            <Severity>1</Severity>
            <AlertName />
            <AlertDescription />
            <AlertOwner />
            <AlertMessageId>$MPElement[Name="Microsoft.Windows.DHCP.2016.Server.Service.RecoveryFailed.Recovery.Rule.AlertMessage"]$</AlertMessageId>
            <AlertParameters>
              <AlertParameter1>$Data/EventDescription$</AlertParameter1>
            </AlertParameters>
            <Suppression>
              <SuppressionValue>$Data[Default='']/EventDisplayNumber$</SuppressionValue>
              <SuppressionValue>$Data[Default='']/PublisherName$</SuppressionValue>
              <SuppressionValue>$Data[Default='']/LoggingComputer$</SuppressionValue>
            </Suppression>
            <Custom1 />
            <Custom2 />
            <Custom3 />
            <Custom4 />
            <Custom5 />
            <Custom6 />
            <Custom7 />
            <Custom8 />
            <Custom9 />
            <Custom10 />
          </WriteAction>
        </WriteActions>
      </Rule>
      <Rule ID="Microsoft.Windows.DHCP.2016.Server.Service.TooManyRecoveryAttempts.Recovery.Rule" Enabled="true" Target="MWD6!Microsoft.Windows.DHCPServer.10.0.Server" ConfirmDelivery="true" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>Alert</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="Windows!Microsoft.Windows.EventProvider">
            <ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName>
            <LogName>Operations Manager</LogName>
            <Expression>
              <And>
                <Expression>
                  <SimpleExpression>
                    <ValueExpression>
                      <XPathQuery Type="UnsignedInteger">EventDisplayNumber</XPathQuery>
                    </ValueExpression>
                    <Operator>Equal</Operator>
                    <ValueExpression>
                      <Value Type="UnsignedInteger">3754</Value>
                    </ValueExpression>
                  </SimpleExpression>
                </Expression>
                <Expression>
                  <SimpleExpression>
                    <ValueExpression>
                      <XPathQuery Type="String">PublisherName</XPathQuery>
                    </ValueExpression>
                    <Operator>Equal</Operator>
                    <ValueExpression>
                      <Value Type="String">Health Service Script</Value>
                    </ValueExpression>
                  </SimpleExpression>
                </Expression>
                <Expression>
                  <RegExExpression>
                    <ValueExpression>
                      <XPathQuery Type="String">Params/Param[2]</XPathQuery>
                    </ValueExpression>
                    <Operator>ContainsSubstring</Operator>
                    <Pattern>DHCPServer</Pattern>
                  </RegExExpression>
                </Expression>
              </And>
            </Expression>
          </DataSource>
        </DataSources>
        <WriteActions>
          <WriteAction ID="Alert" TypeID="Health!System.Health.GenerateAlert">
            <Priority>1</Priority>
            <Severity>1</Severity>
            <AlertName />
            <AlertDescription />
            <AlertOwner />
            <AlertMessageId>$MPElement[Name="Microsoft.Windows.DHCP.2016.Server.Service.TooManyRecoveryAttempts.Recovery.Rule.AlertMessage"]$</AlertMessageId>
            <AlertParameters>
              <AlertParameter1>$Data/EventDescription$</AlertParameter1>
            </AlertParameters>
            <Suppression>
              <SuppressionValue>$Data[Default='']/EventDisplayNumber$</SuppressionValue>
              <SuppressionValue>$Data[Default='']/PublisherName$</SuppressionValue>
              <SuppressionValue>$Data[Default='']/LoggingComputer$</SuppressionValue>
            </Suppression>
            <Custom1 />
            <Custom2 />
            <Custom3 />
            <Custom4 />
            <Custom5 />
            <Custom6 />
            <Custom7 />
            <Custom8 />
            <Custom9 />
            <Custom10 />
          </WriteAction>
        </WriteActions>
      </Rule>
    </Rules>
    <Monitors>
      <UnitMonitor ID="Microsoft.Windows.DHCP.2016.Client.Service.Monitor" Accessibility="Public" Enabled="true" Target="MWD6!Microsoft.Windows.DHCPServer.10.0.Server" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" TypeID="Microsoft.Windows.DHCP.2016.Service.Monitor.MonitorType" ConfirmDelivery="true">
        <Category>ConfigurationHealth</Category>
        <AlertSettings AlertMessage="Microsoft.Windows.DHCP.2016.Client.Service.Monitor.AlertMessage">
          <AlertOnState>Warning</AlertOnState>
          <AutoResolve>true</AutoResolve>
          <AlertPriority>Normal</AlertPriority>
          <AlertSeverity>Warning</AlertSeverity>
          <AlertParameters>
            <AlertParameter1>$Data/Context/Property[@Name='Name']$</AlertParameter1>
            <AlertParameter2>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</AlertParameter2>
          </AlertParameters>
        </AlertSettings>
        <OperationalStates>
          <OperationalState ID="Running" MonitorTypeStateID="Running" HealthState="Success" />
          <OperationalState ID="NotRunning" MonitorTypeStateID="NotRunning" HealthState="Warning" />
        </OperationalStates>
        <Configuration>
          <ComputerName />
          <ServiceName>DHCP</ServiceName>
          <IntervalSeconds>300</IntervalSeconds>
          <CheckStartupType>true</CheckStartupType>
          <Samples>2</Samples>
        </Configuration>
      </UnitMonitor>
      <UnitMonitor ID="Microsoft.Windows.DHCP.2016.Server.Service.Monitor" Accessibility="Public" Enabled="true" Target="MWD6!Microsoft.Windows.DHCPServer.10.0.Server" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" TypeID="Microsoft.Windows.DHCP.2016.Service.Monitor.MonitorType" ConfirmDelivery="true">
        <Category>ConfigurationHealth</Category>
        <AlertSettings AlertMessage="Microsoft.Windows.DHCP.2016.Server.Service.Monitor.AlertMessage">
          <AlertOnState>Warning</AlertOnState>
          <AutoResolve>true</AutoResolve>
          <AlertPriority>Normal</AlertPriority>
          <AlertSeverity>Warning</AlertSeverity>
          <AlertParameters>
            <AlertParameter1>$Data/Context/Property[@Name='Name']$</AlertParameter1>
            <AlertParameter2>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</AlertParameter2>
          </AlertParameters>
        </AlertSettings>
        <OperationalStates>
          <OperationalState ID="Running" MonitorTypeStateID="Running" HealthState="Success" />
          <OperationalState ID="NotRunning" MonitorTypeStateID="NotRunning" HealthState="Warning" />
        </OperationalStates>
        <Configuration>
          <ComputerName />
          <ServiceName>DHCPserver</ServiceName>
          <IntervalSeconds>300</IntervalSeconds>
          <CheckStartupType>true</CheckStartupType>
          <Samples>2</Samples>
        </Configuration>
      </UnitMonitor>
    </Monitors>
    <Recoveries>
      <Recovery ID="Microsoft.Windows.DHCP.2016.Client.Service.Recovery" Accessibility="Public" Enabled="true" Target="MWD6!Microsoft.Windows.DHCPServer.10.0.Server" Monitor="Microsoft.Windows.DHCP.2016.Client.Service.Monitor" ResetMonitor="true" ExecuteOnState="Warning" Remotable="true" Timeout="300">
        <Category>Custom</Category>
        <WriteAction ID="PSWA" TypeID="Windows!Microsoft.Windows.PowerShellWriteAction">
          <ScriptName>Microsoft.Windows.DHCP.2016.Client.Service.Recovery.v1001.ps1</ScriptName>
          <ScriptBody>
#=================================================================================
#  Script to restart a service
#
#  Author:  Kevin Holman
#
#  Version:  1.0
#
#=================================================================================


# Manual Testing section - put stuff here for manually testing script - typically parameters:
#=================================================================================
# $ServiceName = "dhcp"
#=================================================================================


# Constants section - modify stuff here:
#=================================================================================
# Assign script name variable for use in event logging
$ScriptName = "Microsoft.Windows.DHCP.2016.Client.Service.Recovery.v1001.ps1"
$EventID = "3750"
#=================================================================================


# Starting Script section
#=================================================================================
# Gather the start time of the script
$StartTime = Get-Date
#Set variable to be used in logging events
$whoami = whoami
# Load MOMScript API
$momapi = New-Object -comObject MOM.ScriptAPI
#=================================================================================


# Begin MAIN script section
#=================================================================================

[string]$ServiceName = "dhcp"

#Log script event that we are starting task
$momapi.LogScriptEvent($ScriptName,$EventID,0,"`n Recovery script for service: ($ServiceName) is starting. `n Running as ($whoami).")
write-host "Recovery script for service: ($ServiceName) is starting. Running as ($whoami)."

#Get the service object
$Svc = Get-Service $ServiceName

#Check to ensure the service exists:
IF (!$Svc)
{
  $momapi.LogScriptEvent($ScriptName,3751,2, "`n Service ($ServiceName) was not found on this computer. `n This indicates a misconfiguration of the monitor. `n Error is ($error)")
  write-host "Service ($ServiceName) was not found on this computer. This indicates a misconfiguration of the monitor. Error is ($error)"
  EXIT
}

#Get Service Status:
[string]$SvcStatus = $Svc.Status

#Do not continue is service is already running
IF ($SvcStatus -eq "Running")
{
  $momapi.LogScriptEvent($ScriptName,3752,2, "`n Service ($ServiceName) was found to be in the Running state. `n This indicates a misconfiguration of the monitor. `n No recovery action will be taken.")
  write-host "Service ($ServiceName) was found to be in the Running state. This indicates a misconfiguration of the monitor. No recovery action will be taken."
  EXIT  
}

#Log recovery information event
$momapi.LogScriptEvent($ScriptName,$EventID,0,"`n Service: ($ServiceName) was found to be in the ($SvcStatus) state.  Recovery will be attempted.")
write-host "Service: ($ServiceName) was found to be in the ($SvcStatus) state.  Recovery will be attempted."

#Attempt First Recovery
#Restart-Service -Name $ServiceName -Force
get-Service -Name $ServiceName | start-service
#Wait time in seconds
Start-Sleep 20
#Get the service object
$Svc = Get-Service $ServiceName
#Get Service Status:
$SvcStatus = $Svc.Status

IF ($SvcStatus -ne "Running")
{
  #Attempt Second Recovery
  $momapi.LogScriptEvent($ScriptName,$EventID,0,"`n Service: ($ServiceName) second attempt at recovering starting now.")
  write-host "Service: ($ServiceName) second attempt at recovering starting now."  
  #Restart-Service -Name $ServiceName -Force 
  get-Service -Name $ServiceName | start-service
  Start-Sleep 20
  $Svc = Get-Service $ServiceName
  $SvcStatus = $Svc.Status 
}

IF ($SvcStatus -ne "Running")
{
  #Attempt Third Recovery
  $momapi.LogScriptEvent($ScriptName,$EventID,0,"`n Service: ($ServiceName) third attempt at recovering starting now.")
  write-host "Service: ($ServiceName) third attempt at recovering starting now."    
  #Restart-Service -Name $ServiceName -Force
  get-Service -Name $ServiceName | start-service
  Start-Sleep 20
  $Svc = Get-Service $ServiceName
  $SvcStatus = $Svc.Status 
}

IF ($SvcStatus -eq "Running")
{
  #Log event of a successful restart
  $momapi.LogScriptEvent($ScriptName,$EventID,0,"`n Service: ($ServiceName) was successfully restarted and then detected to be in the Running state.")
  write-host "Service: ($ServiceName) was successfully restarted and then detected to be in the Running state."
}
ELSE
{
  #Log event of a successful restart
  $momapi.LogScriptEvent($ScriptName,3753,2,"`n Service: ($ServiceName) is not running. `n Recovery was attempted and failed. `n Manual interventon is required. `n The last detected service status was ($SvcStatus).") 
  write-host "Service: ($ServiceName) is not running. Recovery was attempted and failed. Manual interventon is required. The last detected service status was ($SvcStatus)."
}

# Check to see if this recovery script has been run multiple times in the last x minutes for detection of too many recovery actions
$Message = "*($ServiceName) is starting*"
$Events = Get-EventLog -LogName 'Operations Manager' -After $StartTime.AddMinutes(-60) -Message $Message | where {$_.EventID -eq 3750}
$EventCount = $Events.Count
IF ($EventCount -ge 3)
{
  $momapi.LogScriptEvent($ScriptName,3754,2,"`n Too many service recoveries have been attempted for ($ServiceName). `n ($EventCount) recoveries are detected in the event log. `n Manual interventon is required.")
  write-host "Too many service recoveries have been attempted for ($ServiceName). ($EventCount) recoveries are detected in the event log. Manual interventon is required."
}

# End of script section
#=================================================================================
#Log an event for script ending and total execution time.
$EndTime = Get-Date
$ScriptTime = ($EndTime - $StartTime).TotalSeconds
$momapi.LogScriptEvent($ScriptName,$EventID,0,"`n Script Completed. `n Script Runtime: ($ScriptTime) seconds.")
write-host "Script Completed. Script Runtime: ($ScriptTime) seconds."
#=================================================================================
# End of script		  
		  </ScriptBody>
          <TimeoutSeconds>240</TimeoutSeconds>
        </WriteAction>
      </Recovery>
      <Recovery ID="Microsoft.Windows.DHCP.2016.Server.Service.Recovery" Accessibility="Public" Enabled="true" Target="MWD6!Microsoft.Windows.DHCPServer.10.0.Server" Monitor="Microsoft.Windows.DHCP.2016.Server.Service.Monitor" ResetMonitor="true" ExecuteOnState="Warning" Remotable="true" Timeout="300">
        <Category>Custom</Category>
        <WriteAction ID="PSWA" TypeID="Windows!Microsoft.Windows.PowerShellWriteAction">
          <ScriptName>Microsoft.Windows.DHCP.2016.Server.Service.Recovery.v1001.ps1</ScriptName>
          <ScriptBody>
#=================================================================================
#  Script to restart a service
#
#  Author:  Kevin Holman
#
#  Version:  1.0
#
#=================================================================================


# Manual Testing section - put stuff here for manually testing script - typically parameters:
#=================================================================================
# $ServiceName = "dhcpserver"
#=================================================================================


# Constants section - modify stuff here:
#=================================================================================
# Assign script name variable for use in event logging
$ScriptName = "Microsoft.Windows.DHCP.2016.Server.Service.Recovery.v1001.ps1"
$EventID = "3750"
#=================================================================================


# Starting Script section
#=================================================================================
# Gather the start time of the script
$StartTime = Get-Date
#Set variable to be used in logging events
$whoami = whoami
# Load MOMScript API
$momapi = New-Object -comObject MOM.ScriptAPI
#=================================================================================


# Begin MAIN script section
#=================================================================================

[string]$ServiceName = "dhcpserver"

#Log script event that we are starting task
$momapi.LogScriptEvent($ScriptName,$EventID,0,"`n Recovery script for service: ($ServiceName) is starting. `n Running as ($whoami).")
write-host "Recovery script for service: ($ServiceName) is starting. Running as ($whoami)."

#Get the service object
$Svc = Get-Service $ServiceName

#Check to ensure the service exists:
IF (!$Svc)
{
  $momapi.LogScriptEvent($ScriptName,3751,2, "`n Service ($ServiceName) was not found on this computer. `n This indicates a misconfiguration of the monitor. `n Error is ($error)")
  write-host "Service ($ServiceName) was not found on this computer. This indicates a misconfiguration of the monitor. Error is ($error)"
  EXIT
}

#Get Service Status:
[string]$SvcStatus = $Svc.Status

#Do not continue is service is already running
IF ($SvcStatus -eq "Running")
{
  $momapi.LogScriptEvent($ScriptName,3752,2, "`n Service ($ServiceName) was found to be in the Running state. `n This indicates a misconfiguration of the monitor. `n No recovery action will be taken.")
  write-host "Service ($ServiceName) was found to be in the Running state. This indicates a misconfiguration of the monitor. No recovery action will be taken."
  EXIT  
}

#Log recovery information event
$momapi.LogScriptEvent($ScriptName,$EventID,0,"`n Service: ($ServiceName) was found to be in the ($SvcStatus) state.  Recovery will be attempted.")
write-host "Service: ($ServiceName) was found to be in the ($SvcStatus) state.  Recovery will be attempted."

#Attempt First Recovery
#Restart-Service -Name $ServiceName -Force
get-Service -Name $ServiceName | start-service
#Wait time in seconds
Start-Sleep 20
#Get the service object
$Svc = Get-Service $ServiceName
#Get Service Status:
$SvcStatus = $Svc.Status

IF ($SvcStatus -ne "Running")
{
  #Attempt Second Recovery
  $momapi.LogScriptEvent($ScriptName,$EventID,0,"`n Service: ($ServiceName) second attempt at recovering starting now.")
  write-host "Service: ($ServiceName) second attempt at recovering starting now."  
  #Restart-Service -Name $ServiceName -Force 
  get-Service -Name $ServiceName | start-service
  Start-Sleep 20
  $Svc = Get-Service $ServiceName
  $SvcStatus = $Svc.Status 
}

IF ($SvcStatus -ne "Running")
{
  #Attempt Third Recovery
  $momapi.LogScriptEvent($ScriptName,$EventID,0,"`n Service: ($ServiceName) third attempt at recovering starting now.")
  write-host "Service: ($ServiceName) third attempt at recovering starting now."    
  #Restart-Service -Name $ServiceName -Force
  get-Service -Name $ServiceName | start-service
  Start-Sleep 20
  $Svc = Get-Service $ServiceName
  $SvcStatus = $Svc.Status 
}

IF ($SvcStatus -eq "Running")
{
  #Log event of a successful restart
  $momapi.LogScriptEvent($ScriptName,$EventID,0,"`n Service: ($ServiceName) was successfully restarted and then detected to be in the Running state.")
  write-host "Service: ($ServiceName) was successfully restarted and then detected to be in the Running state."
}
ELSE
{
  #Log event of a successful restart
  $momapi.LogScriptEvent($ScriptName,3753,2,"`n Service: ($ServiceName) is not running. `n Recovery was attempted and failed. `n Manual interventon is required. `n The last detected service status was ($SvcStatus).") 
  write-host "Service: ($ServiceName) is not running. Recovery was attempted and failed. Manual interventon is required. The last detected service status was ($SvcStatus)."
}

# Check to see if this recovery script has been run multiple times in the last x minutes for detection of too many recovery actions
$Message = "*($ServiceName) is starting*"
$Events = Get-EventLog -LogName 'Operations Manager' -After $StartTime.AddMinutes(-60) -Message $Message | where {$_.EventID -eq 3750}
$EventCount = $Events.Count
IF ($EventCount -ge 3)
{
  $momapi.LogScriptEvent($ScriptName,3754,2,"`n Too many service recoveries have been attempted for ($ServiceName). `n ($EventCount) recoveries are detected in the event log. `n Manual interventon is required.")
  write-host "Too many service recoveries have been attempted for ($ServiceName). ($EventCount) recoveries are detected in the event log. Manual interventon is required."
}

# End of script section
#=================================================================================
#Log an event for script ending and total execution time.
$EndTime = Get-Date
$ScriptTime = ($EndTime - $StartTime).TotalSeconds
$momapi.LogScriptEvent($ScriptName,$EventID,0,"`n Script Completed. `n Script Runtime: ($ScriptTime) seconds.")
write-host "Script Completed. Script Runtime: ($ScriptTime) seconds."
#=================================================================================
# End of script		  
		  </ScriptBody>
          <TimeoutSeconds>240</TimeoutSeconds>
        </WriteAction>
      </Recovery>
    </Recoveries>
    <Overrides>
      <DiscoveryPropertyOverride ID="Override.Disable.Microsoft.Windows.DHCPServer.10.0.Server.Discovery" Context="MWS6D!Microsoft.Windows.Server.10.0.Computer" Enforced="false" Discovery="MWD6!Microsoft.Windows.DHCPServer.10.0.Server.Discovery" Property="Enabled">
        <Value>false</Value>
      </DiscoveryPropertyOverride>
      <DiscoveryPropertyOverride ID="Override.Enable.Group.Microsoft.Windows.DHCPServer.10.0.Server.Discovery" Context="Microsoft.Windows.DHCP.2016.Servers.Group" ContextInstance="8db3aac7-e4d6-bf4a-98eb-284a7cdb9724" Enforced="false" Discovery="MWD6!Microsoft.Windows.DHCPServer.10.0.Server.Discovery" Property="Enabled">
        <Value>true</Value>
      </DiscoveryPropertyOverride>

      <MonitorConfigurationOverride ID="Alias5a15f411c8ee435b921cdcc145d116c7OverrideForMonitorMicrosoftWindowsDHCPServer100IndScopeIPV4FreeScopeAddressesPercentageMonitorForContextMicrosoftWindowsDHCPServerLibraryIPv4Scope" Context="MWDL!Microsoft.Windows.DHCPServer.Library.IPv4Scope" ContextInstance="7750f9f1-bae9-20d2-ad90-97ac6ff6a87b" Enforced="false" Monitor="MWD6!Microsoft.Windows.DHCPServer.10.0.IndScope.IPV4.FreeScopeAddresses.Percentage.Monitor" Parameter="ErrorThreshold">
        <Value>2</Value>
      </MonitorConfigurationOverride>
      <MonitorConfigurationOverride ID="Alias664208cb209e428082c2df71ec586d5aOverrideForMonitorMicrosoftWindowsDHCPServer100IndScopeIPV4FreeScopeAddressesPercentageMonitorForContextMicrosoftWindowsDHCPServerLibraryIPv4Scope" Context="MWDL!Microsoft.Windows.DHCPServer.Library.IPv4Scope" ContextInstance="7750f9f1-bae9-20d2-ad90-97ac6ff6a87b" Enforced="false" Monitor="MWD6!Microsoft.Windows.DHCPServer.10.0.IndScope.IPV4.FreeScopeAddresses.Percentage.Monitor" Parameter="WarningThreshold">
        <Value>3</Value>
      </MonitorConfigurationOverride>
      <MonitorConfigurationOverride ID="Alias6bc628b2a108489291bdd24067edfa47OverrideForMonitorMicrosoftWindowsDHCPServer100IndScopeIPV4FreeScopeAddressesPercentageMonitorForContextMicrosoftWindowsDHCPServerLibraryIPv4Scope" Context="MWDL!Microsoft.Windows.DHCPServer.Library.IPv4Scope" ContextInstance="a54d8ba6-8953-43d6-d4f0-c334a5f9a876" Enforced="false" Monitor="MWD6!Microsoft.Windows.DHCPServer.10.0.IndScope.IPV4.FreeScopeAddresses.Percentage.Monitor" Parameter="WarningThreshold">
        <Value>25</Value>
      </MonitorConfigurationOverride>
      <MonitorConfigurationOverride ID="Alias688acc1ebdf24de0abdcf56619d825a5OverrideForMonitorMicrosoftWindowsDHCPServer100IndScopeIPV4FreeScopeAddressesPercentageMonitorForContextMicrosoftWindowsDHCPServerLibraryIPv4Scope" Context="MWDL!Microsoft.Windows.DHCPServer.Library.IPv4Scope" ContextInstance="f72dbb8f-7987-b8fd-b418-8d55776dad7d" Enforced="false" Monitor="MWD6!Microsoft.Windows.DHCPServer.10.0.IndScope.IPV4.FreeScopeAddresses.Percentage.Monitor" Parameter="WarningThreshold">
        <Value>20</Value>
      </MonitorConfigurationOverride>
      <MonitorConfigurationOverride ID="Alias060e39e647b446feafe229014840c913OverrideForMonitorMicrosoftWindowsDHCPServer100IndScopeIPV4FreeScopeAddressesPercentageMonitorForContextMicrosoftWindowsDHCPServerLibraryIPv4Scope" Context="MWDL!Microsoft.Windows.DHCPServer.Library.IPv4Scope" ContextInstance="8aaedfe2-d2f8-1825-75ba-26478af1a81f" Enforced="false" Monitor="MWD6!Microsoft.Windows.DHCPServer.10.0.IndScope.IPV4.FreeScopeAddresses.Percentage.Monitor" Parameter="WarningThreshold">
        <Value>25</Value>
      </MonitorConfigurationOverride>
      <MonitorConfigurationOverride ID="Alias0669d8cf59cb40cc850ce2fc34abd7f2OverrideForMonitorMicrosoftWindowsDHCPServer100IndScopeIPV4FreeScopeAddressesPercentageMonitorForContextMicrosoftWindowsDHCPServerLibraryIPv4Scope" Context="MWDL!Microsoft.Windows.DHCPServer.Library.IPv4Scope" ContextInstance="0554b172-f99f-34fc-508c-31cbd86c5544" Enforced="false" Monitor="MWD6!Microsoft.Windows.DHCPServer.10.0.IndScope.IPV4.FreeScopeAddresses.Percentage.Monitor" Parameter="ErrorThreshold">
        <Value>5</Value>
      </MonitorConfigurationOverride>
      <MonitorConfigurationOverride ID="Alias85c016fbd42d4b6e982735ccc434baf6OverrideForMonitorMicrosoftWindowsDHCPServer100IndScopeIPV4FreeScopeAddressesPercentageMonitorForContextMicrosoftWindowsDHCPServerLibraryIPv4Scope" Context="MWDL!Microsoft.Windows.DHCPServer.Library.IPv4Scope" ContextInstance="0554b172-f99f-34fc-508c-31cbd86c5544" Enforced="false" Monitor="MWD6!Microsoft.Windows.DHCPServer.10.0.IndScope.IPV4.FreeScopeAddresses.Percentage.Monitor" Parameter="WarningThreshold">
        <Value>10</Value>
      </MonitorConfigurationOverride>
      <MonitorConfigurationOverride ID="Override.ErrorThreshold.Microsoft.Windows.DHCPServer.10.0.IndScope.IPV4.FreeScopeAddresses.Percentage.Monitor" Context="MWDL!Microsoft.Windows.DHCPServer.Library.IPv4Scope" Enforced="false" Monitor="MWD6!Microsoft.Windows.DHCPServer.10.0.IndScope.IPV4.FreeScopeAddresses.Percentage.Monitor" Parameter="ErrorThreshold">
        <Value>1</Value>
      </MonitorConfigurationOverride>
      <MonitorConfigurationOverride ID="Override.WarningThreshold.Microsoft.Windows.DHCPServer.10.0.IndScope.IPV4.FreeScopeAddresses.Percentage.Monitor" Context="MWDL!Microsoft.Windows.DHCPServer.Library.IPv4Scope" Enforced="false" Monitor="MWD6!Microsoft.Windows.DHCPServer.10.0.IndScope.IPV4.FreeScopeAddresses.Percentage.Monitor" Parameter="WarningThreshold">
        <Value>10</Value>
      </MonitorConfigurationOverride>
      <MonitorPropertyOverride ID="Override.Warning.AlertSeverity.Microsoft.Windows.DHCPServer.10.0.IndScope.IPV4.FreeScopeAddresses.Percentage.Monitor" Context="MWDL!Microsoft.Windows.DHCPServer.Library.IPv4Scope" Enforced="false" Monitor="MWD6!Microsoft.Windows.DHCPServer.10.0.IndScope.IPV4.FreeScopeAddresses.Percentage.Monitor" Property="AlertSeverity">
        <Value>Warning</Value>
      </MonitorPropertyOverride>
      <MonitorPropertyOverride ID="Alias9d2adf8981ca4099806cc3beda63e2f8OverrideForMonitorMicrosoftWindowsDHCPServer100IPv6RuntimeUnitMonitorStaticIPAssignedForContextMicrosoftWindowsDHCPServer100IPv6Runtime" Context="MWD6!Microsoft.Windows.DHCPServer.10.0.IPv6Runtime" ContextInstance="cf0c0a60-9c72-6f36-2c91-9e8991f4ea28" Enforced="false" Monitor="MWD6!Microsoft.Windows.DHCPServer.10.0.IPv6Runtime.UnitMonitor.StaticIPAssigned" Property="Enabled">
        <Value>false</Value>
      </MonitorPropertyOverride>

      <RuleConfigurationOverride ID="Override.DisableAlert.Microsoft.Windows.DHCPServer.10.0.Policy.Rule.ResidualIPAddressRange100Full" Context="MWD6!Microsoft.Windows.DHCPServer.10.0.IPv4Scope" Enforced="false" Rule="MWD6!Microsoft.Windows.DHCPServer.10.0.Policy.Rule.ResidualIPAddressRange100Full" Parameter="Severity" Module="GenerateAlert">
        <Value>2</Value>
      </RuleConfigurationOverride>
      <RulePropertyOverride ID="Override.Disable.Microsoft.Windows.DHCPServer.10.0.Policy.Rule.ClientPackDrop100Full" Context="MWDL!Microsoft.Windows.DHCPServer.Library.IPv4Scope" Enforced="false" Rule="MWD6!Microsoft.Windows.DHCPServer.10.0.Policy.Rule.ClientPackDrop100Full" Property="Enabled">
        <Value>false</Value>
      </RulePropertyOverride>
      <RulePropertyOverride ID="Override.Disable.Microsoft.Windows.DHCPServer.Library.IPv4Scope.Collect.ScopeFull" Context="MWDL!Microsoft.Windows.DHCPServer.Library.IPv4Scope" Enforced="false" Rule="MWDL!Microsoft.Windows.DHCPServer.Library.IPv4Scope.Collect.ScopeFull" Property="Enabled">
        <Value>false</Value>
      </RulePropertyOverride>
      <RulePropertyOverride ID="Override.Disable.Microsoft.Windows.DHCPServer.10.0.Policy.Rule.ResidualIPAddressRange100Full" Context="MWDL!Microsoft.Windows.DHCPServer.Library.IPv4Scope" Enforced="false" Rule="MWD6!Microsoft.Windows.DHCPServer.10.0.Policy.Rule.ResidualIPAddressRange100Full" Property="Enabled">
        <Value>false</Value>
      </RulePropertyOverride>
      <RulePropertyOverride ID="Override.Disable.Microsoft.Windows.DHCPServer.Library.IPv4Runtime.Collect.DomainAuthorizedAndStarted" Context="MWDL!Microsoft.Windows.DHCPServer.Library.IPv4Runtime" Enforced="false" Rule="MWDL!Microsoft.Windows.DHCPServer.Library.IPv4Runtime.Collect.DomainAuthorizedAndStarted" Property="Enabled">
        <Value>false</Value>
      </RulePropertyOverride>
      <RulePropertyOverride ID="Override.Disable.Microsoft.Windows.DHCPServer.Library.Server.Collect.ScriptTraceEvents" Context="MWDL!Microsoft.Windows.DHCPServer.Library.Server" Enforced="false" Rule="MWDL!Microsoft.Windows.DHCPServer.Library.Server.Collect.ScriptTraceEvents" Property="Enabled">
        <Value>false</Value>
      </RulePropertyOverride>
      <RulePropertyOverride ID="Override.Disable.Microsoft.Windows.DHCPServer.Library.Database.Collect.DatabaseBackupFail" Context="MWDL!Microsoft.Windows.DHCPServer.Library.Database" Enforced="false" Rule="MWDL!Microsoft.Windows.DHCPServer.Library.Database.Collect.DatabaseBackupFail" Property="Enabled">
        <Value>false</Value>
      </RulePropertyOverride>
    </Overrides>
  </Monitoring>
  <Presentation>
    <StringResources>
      <StringResource ID="Microsoft.Windows.DHCP.2016.Client.Service.NotFound.Recovery.Rule.AlertMessage" />
      <StringResource ID="Microsoft.Windows.DHCP.2016.Client.Service.FoundRunning.Recovery.Rule.AlertMessage" />
      <StringResource ID="Microsoft.Windows.DHCP.2016.Client.Service.RecoveryFailed.Recovery.Rule.AlertMessage" />
      <StringResource ID="Microsoft.Windows.DHCP.2016.Client.Service.TooManyRecoveryAttempts.Recovery.Rule.AlertMessage" />
      <StringResource ID="Microsoft.Windows.DHCP.2016.Server.Service.NotFound.Recovery.Rule.AlertMessage" />
      <StringResource ID="Microsoft.Windows.DHCP.2016.Server.Service.FoundRunning.Recovery.Rule.AlertMessage" />
      <StringResource ID="Microsoft.Windows.DHCP.2016.Server.Service.RecoveryFailed.Recovery.Rule.AlertMessage" />
      <StringResource ID="Microsoft.Windows.DHCP.2016.Server.Service.TooManyRecoveryAttempts.Recovery.Rule.AlertMessage" />
      <StringResource ID="Microsoft.Windows.DHCP.2016.Client.Service.Monitor.AlertMessage" />
      <StringResource ID="Microsoft.Windows.DHCP.2016.Server.Service.Monitor.AlertMessage" />
    </StringResources>
  </Presentation>
  <LanguagePacks>
    <LanguagePack ID="ENU" IsDefault="false">
      <DisplayStrings>
        <DisplayString ElementID="Microsoft.Windows.Server.DHCP.2016.Addendum">
          <Name>Microsoft Windows DHCP 2016+ Server Addendum</Name>
          <Description>
v1.0.0.5  29 Aug 2023 - Generic pack for distribution, human readable Override descriptions
v1.0.0.4  18 Jul 2023 - Updated reports to informational
v1.0.0.3   5 Jan 2023 - Disabled event collections
v1.0.0.1   7 Jul 2022 - Updated for consumption, service automation/recovery
v1.0.0.0  11 Aug 2020 - Created addendum pack</Description>
        </DisplayString>
        <DisplayString ElementID="Microsoft.Windows.DHCP.2016.Servers.Group">
          <Name>Microsoft Windows DHCP 2016+ Servers</Name>
          <Description>Created 11 Aug 2020 - KWJ - DHCP discovery scoping for efficient agent workflows</Description>
        </DisplayString>
        <DisplayString ElementID="Microsoft.Windows.DHCP.2016.Subscription.Group">
          <Name>Microsoft Windows DHCP 2016+ subscription components</Name>
          <Description>Created 22 Sep 2020 - KWJ - verifying subscriptions</Description>
        </DisplayString>

        <DisplayString ElementID="Microsoft.Windows.DHCP.2016.Service.Monitor.MonitorType">
          <Name>Microsoft Windows DHCP 2016 Service Monitor MonitorType</Name>
        </DisplayString>

        <DisplayString ElementID="Microsoft.Windows.DHCP.2016.Servers.Group.DiscoveryRule">
          <Name>Populate DHCP Windows Servers 2016+</Name>
          <Description>This discovery rule populates the group 'DHCP Windows Servers 2016+'</Description>
        </DisplayString>
        <DisplayString ElementID="Microsoft.Windows.DHCP.2016.Subscription.Group.DiscoveryRule">
          <Name>Populate DHCP Windows subscription components group</Name>
          <Description>This discovery rule populates the group 'DHCP Windows subscription components'</Description>
        </DisplayString>

        <DisplayString ElementID="Microsoft.Windows.DHCP.2016.Client.Service.NotFound.Recovery.Rule">
          <Name>Microsoft Windows DHCP 2016 Client Service Recovery Failed - Service Not Found Rule</Name>
        </DisplayString>
        <DisplayString ElementID="Microsoft.Windows.DHCP.2016.Client.Service.NotFound.Recovery.Rule.AlertMessage">
          <Name>Microsoft Windows DHCP 2016 Client Service Recovery Failed - Service Not Found</Name>
          <Description>Event Description: {0}</Description>
        </DisplayString>
        <DisplayString ElementID="Microsoft.Windows.DHCP.2016.Client.Service.FoundRunning.Recovery.Rule">
          <Name>Microsoft Windows DHCP 2016 Client Service Recovery Failed - Service Already Running Rule</Name>
        </DisplayString>
        <DisplayString ElementID="Microsoft.Windows.DHCP.2016.Client.Service.FoundRunning.Recovery.Rule.AlertMessage">
          <Name>Microsoft Windows DHCP 2016 Client Service Recovery Failed - Service Already Running</Name>
          <Description>Event Description: {0}</Description>
        </DisplayString>
        <DisplayString ElementID="Microsoft.Windows.DHCP.2016.Client.Service.RecoveryFailed.Recovery.Rule">
          <Name>Microsoft Windows DHCP 2016 Client Service Recovery Failed - Service is not running Rule</Name>
        </DisplayString>
        <DisplayString ElementID="Microsoft.Windows.DHCP.2016.Client.Service.RecoveryFailed.Recovery.Rule.AlertMessage">
          <Name>Microsoft Windows DHCP 2016 Client Service Recovery Failed - Service is not running</Name>
          <Description>Event Description: {0}</Description>
        </DisplayString>
        <DisplayString ElementID="Microsoft.Windows.DHCP.2016.Client.Service.TooManyRecoveryAttempts.Recovery.Rule">
          <Name>Microsoft Windows DHCP 2016 Client Service Recovery has attempted to recover the service too many times Rule</Name>
        </DisplayString>
        <DisplayString ElementID="Microsoft.Windows.DHCP.2016.Client.Service.TooManyRecoveryAttempts.Recovery.Rule.AlertMessage">
          <Name>Microsoft Windows DHCP 2016 Client Service Recovery has attempted to recover the service too many times</Name>
          <Description>Event Description: {0}</Description>
        </DisplayString>
        <DisplayString ElementID="Microsoft.Windows.DHCP.2016.Server.Service.NotFound.Recovery.Rule">
          <Name>Microsoft Windows DHCP 2016 Server Service Recovery Failed - Service Not Found Rule</Name>
        </DisplayString>
        <DisplayString ElementID="Microsoft.Windows.DHCP.2016.Server.Service.NotFound.Recovery.Rule.AlertMessage">
          <Name>Microsoft Windows DHCP 2016 Server Service Recovery Failed - Service Not Found</Name>
          <Description>Event Description: {0}</Description>
        </DisplayString>
        <DisplayString ElementID="Microsoft.Windows.DHCP.2016.Server.Service.FoundRunning.Recovery.Rule">
          <Name>Microsoft Windows DHCP 2016 Server Service Recovery Failed - Service Already Running Rule</Name>
        </DisplayString>
        <DisplayString ElementID="Microsoft.Windows.DHCP.2016.Server.Service.FoundRunning.Recovery.Rule.AlertMessage">
          <Name>Microsoft Windows DHCP 2016 Server Service Recovery Failed - Service Already Running</Name>
          <Description>Event Description: {0}</Description>
        </DisplayString>
        <DisplayString ElementID="Microsoft.Windows.DHCP.2016.Server.Service.RecoveryFailed.Recovery.Rule">
          <Name>Microsoft Windows DHCP 2016 Server Service Recovery Failed - Service is not running Rule</Name>
        </DisplayString>
        <DisplayString ElementID="Microsoft.Windows.DHCP.2016.Server.Service.RecoveryFailed.Recovery.Rule.AlertMessage">
          <Name>Microsoft Windows DHCP 2016 Server Service Recovery Failed - Service is not running</Name>
          <Description>Event Description: {0}</Description>
        </DisplayString>
        <DisplayString ElementID="Microsoft.Windows.DHCP.2016.Server.Service.TooManyRecoveryAttempts.Recovery.Rule">
          <Name>Microsoft Windows DHCP 2016 Server Service Recovery has attempted to recover the service too many times Rule</Name>
        </DisplayString>
        <DisplayString ElementID="Microsoft.Windows.DHCP.2016.Server.Service.TooManyRecoveryAttempts.Recovery.Rule.AlertMessage">
          <Name>Microsoft Windows DHCP 2016 Server Service Recovery has attempted to recover the service too many times</Name>
          <Description>Event Description: {0}</Description>
        </DisplayString>

        <DisplayString ElementID="Microsoft.Windows.DHCP.2016.Client.Service.Monitor">
          <Name>Microsoft Windows DHCP 2016 Client Service Monitor</Name>
        </DisplayString>
        <DisplayString ElementID="Microsoft.Windows.DHCP.2016.Client.Service.Monitor" SubElementID="Running">
          <Name>Running</Name>
        </DisplayString>
        <DisplayString ElementID="Microsoft.Windows.DHCP.2016.Client.Service.Monitor" SubElementID="NotRunning">
          <Name>Not Running</Name>
        </DisplayString>
        <DisplayString ElementID="Microsoft.Windows.DHCP.2016.Client.Service.Monitor.AlertMessage">
          <Name>Microsoft Windows DHCP 2016 Client Service Is Not Running</Name>
          <Description>{0}</Description>
        </DisplayString>
        <DisplayString ElementID="Microsoft.Windows.DHCP.2016.Server.Service.Monitor">
          <Name>Microsoft Windows DHCP 2016 Server Service Monitor</Name>
        </DisplayString>
        <DisplayString ElementID="Microsoft.Windows.DHCP.2016.Server.Service.Monitor" SubElementID="Running">
          <Name>Running</Name>
        </DisplayString>
        <DisplayString ElementID="Microsoft.Windows.DHCP.2016.Server.Service.Monitor" SubElementID="NotRunning">
          <Name>Not Running</Name>
        </DisplayString>
        <DisplayString ElementID="Microsoft.Windows.DHCP.2016.Server.Service.Monitor.AlertMessage">
          <Name>Microsoft Windows DHCP 2016 Server Service Is Not Running</Name>
          <Description>{0}</Description>
        </DisplayString>

        <DisplayString ElementID="Microsoft.Windows.DHCP.2016.Client.Service.Recovery">
          <Name>Microsoft Windows DHCP 2016 Client Service Recovery</Name>
        </DisplayString>
        <DisplayString ElementID="Microsoft.Windows.DHCP.2016.Server.Service.Recovery">
          <Name>Microsoft Windows DHCP 2016 Server Service Recovery</Name>
        </DisplayString>

        <DisplayString ElementID="Override.Enable.Group.Microsoft.Windows.DHCPServer.10.0.Server.Discovery">
          <Name>NotUsed</Name>
          <Description>11 Aug 2020 - KWJ - Enabled for group for efficient agent workflow targeting</Description>
        </DisplayString>
        <DisplayString ElementID="Override.Disable.Microsoft.Windows.DHCPServer.10.0.Server.Discovery">
          <Name>NotUsed</Name>
          <Description>11 Aug 2020 - KWJ - Disabled discovery of DHCP on DTRA Enterprise</Description>
        </DisplayString>
        <DisplayString ElementID="Override.ErrorThreshold.Microsoft.Windows.DHCPServer.10.0.IndScope.IPV4.FreeScopeAddresses.Percentage.Monitor">
          <Name>NotUsed</Name>
          <Description>8 Mar 2021 - KWJ - Changing Warning Error values for DHCP scopes</Description>
        </DisplayString>
        <DisplayString ElementID="Override.WarningThreshold.Microsoft.Windows.DHCPServer.10.0.IndScope.IPV4.FreeScopeAddresses.Percentage.Monitor">
          <Name>NotUsed</Name>
          <Description>8 Mar 2021 - KWJ - Changing Warning Error values for DHCP scopes</Description>
        </DisplayString>
        <DisplayString ElementID="Override.Disable.Microsoft.Windows.DHCPServer.10.0.Policy.Rule.ClientPackDrop100Full">
          <Name>NotUsed</Name>
          <Description>6 Apr 2022 - KWJ - Disabling DHCP event collection</Description>
        </DisplayString>
        <DisplayString ElementID="Override.Disable.Microsoft.Windows.DHCPServer.Library.IPv4Scope.Collect.ScopeFull">
          <Name>NotUsed</Name>
          <Description>6 Apr 2022 - KWJ - Disabling DHCP event collection</Description>
        </DisplayString>
        <DisplayString ElementID="Override.Disable.Microsoft.Windows.DHCPServer.10.0.Policy.Rule.ResidualIPAddressRange100Full">
          <Name>NotUsed</Name>
          <Description>6 Apr 2022 - KWJ - Disabling DHCP event collection</Description>
        </DisplayString>
        <DisplayString ElementID="Override.Disable.Microsoft.Windows.DHCPServer.Library.IPv4Runtime.Collect.DomainAuthorizedAndStarted">
          <Name>NotUsed</Name>
          <Description>21 Dec 2022 - KWJ - Disabliing Event rule collection</Description>
        </DisplayString>
        <DisplayString ElementID="Override.Disable.Microsoft.Windows.DHCPServer.Library.Server.Collect.ScriptTraceEvents">
          <Name>NotUsed</Name>
          <Description>5 Jan 2023 - KWJ - Disabling event collection</Description>
        </DisplayString>
        <DisplayString ElementID="Override.Disable.Microsoft.Windows.DHCPServer.Library.Database.Collect.DatabaseBackupFail">
          <Name>NotUsed</Name>
          <Description>5 Jan 2023 - KWJ - Disabling event collection</Description>
        </DisplayString>
      </DisplayStrings>
    </LanguagePack>
  </LanguagePacks>
</ManagementPack>